{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"password\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hello World\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n\n  const _component_BaseModal = _resolveComponent(\"BaseModal\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderComponent), $data.isShowModal ? (_openBlock(), _createBlock(_component_BaseModal, {\n    key: 0,\n    title: \"This is the new title from App\",\n    content: \"THis is content modal\",\n    theme: \"content\",\n    onCancel: $options.onToggleModal\n  }, {\n    default: _withCtx(() => [_hoisted_1, _hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onCancel\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onToggleModal && $options.onToggleModal(...args))\n  }, \"Toggle Modal\"), _hoisted_3], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCASIA,oBAAuB,OAAvB,EAAuB,IAAvB,EAAO,UAAP,EAAe;AAAA;AAAf;;gCACAA,oBAAyB,OAAzB,EAAyB;AAAlBC,MAAI,EAAC;AAAa,CAAzB,EAAsB,IAAtB,EAAsB;AAAA;AAAtB;;gCAGFD,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;;;;;;6DAZAE,aAAmBC,0BAAnB,GAEQC,mCADRC,aASYC,oBATZ,EASY;UAAA;AAPVC,SAAK,EAAC,gCAOI;AANVC,WAAO,EAAC,uBAME;AALVC,SAAK,EAAC,SAKI;AAJTC,YAAM,EAAEC;AAIC,GATZ;sBAOE,MAAuB,CAAvBC,UAAuB,EACvBC,UADuB;;;;GAPzB;;AAAA,wDAUAb,oBAAoD,QAApD,EAAoD;AAA3Cc,WAAK,yCAAEH,yDAAF;AAAsC,GAApD,EAA+B,cAA/B,GACAI","names":["_createElementVNode","type","_createVNode","_component_HeaderComponent","$data","_createBlock","_component_BaseModal","title","content","theme","onCancel","$options","_hoisted_1","_hoisted_2","onClick","_hoisted_3"],"sourceRoot":"","sources":["/Users/vfa/Documents/GitHub/testVueCli/src/App.vue"],"sourcesContent":["<template>\n  <HeaderComponent />\n  <BaseModal\n    v-if=\"isShowModal\"\n    title=\"This is the new title from App\"\n    content=\"THis is content modal\"\n    theme=\"content\"\n    @cancel=\"onToggleModal\"\n  >\n    <label>Password</label>\n    <input type=\"password\" />\n  </BaseModal>\n  <button @click=\"onToggleModal\">Toggle Modal</button>\n  <h1>Hello World</h1>\n</template>\n\n<script>\nimport HeaderComponent from \"./components/HeaderComponent.vue\";\nimport ModalComponent from \"./components/ModalComponent.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    HeaderComponent,\n    BaseModal: ModalComponent,\n  },\n  methods: {\n    onToggleModal() {\n      this.isShowModal = !this.isShowModal;\n    },\n  },\n  data() {\n    return {\n      isShowModal: false,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}